{"version":3,"sources":["App.js","serviceWorker.js","index.js"],"names":["App","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","page","data","changeList","bind","assertThisInitialized","handlePage","userdata","push","setState","ele","a","b","filter","react_default","createElement","App_Header","className","App_CHANGEPAGE","name","changePage","App_SHOWALLINDIRECTORY","classTableName","classTableBodyName","classTableHeadName","del","updateTable","App_TAKEDATAINDIRECTORY","classFORMSHOWName","classFORMDATAName","classSUBMITBUTTONName","classUSERName","classPASSName","enterDataToDirectory","Component","Header","SHOWALLINDIRECTORY","de","i","userdetail","map","contact","App_TROW","num","number","TAKEDATAINDIRECTORY","_this2","changeName","changeNumber","handleSubmit","e","target","value","preventDefault","d","onSubmit","placeholder","onChange","type","CHANGEPAGE","_this3","onClick","TROW","_this4","deleteContact","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.c7511b0b.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport './App.css';\n\nclass App extends Component {\n   constructor(props)\n   {\n      super(props);\n      this.state = {\n         page : \"First\",\n         data : []\n      };\n      this.changeList = this.changeList.bind(this);\n      this.handlePage = this.handlePage.bind(this);\n   }\n\n   enterDataToDirectory(userdata)\n   {\n      this.state.data.push(userdata); \n      \n   }\n\n   changePage()\n   {\n      if(this.state.page === 'First')\n         this.setState({\n            page : \"Second\",\n         });\n      else \n         this.setState({\n            page : \"First\",\n         });\n   }\n\n   changeList(ele)\n   {\n      var a = this.state.data;\n      var b =a[ele];\n\n      this.setState({\n         data : a.filter(a => a !== b)\n      });\n   }\n\n   handlePage()\n   {\n      if(this.state.page === 'First')\n         return (\n            <div>\n               <Header className='HeaderStyle'/>\n               <CHANGEPAGE className='PageButton' name=\"ADD NEW CONTACT\" page={this.changePage.bind(this)}/>\n               <SHOWALLINDIRECTORY classTableName='Table' classTableBodyName='TableBody' classTableHeadName='TableHead' data={this.state.data} del={this.changeList.bind(this)} updateTable={this.handlePage.bind(this)} />\n            </div>\n         );\n      else if(this.state.page === 'Second')\n      return (\n         <div>\n            <Header className='HeaderStyle' />\n            <CHANGEPAGE className='PageButton' name=\"BACK\" page={this.changePage.bind(this)}/>\n            <TAKEDATAINDIRECTORY classFORMSHOWName='FORMSHOW' classFORMDATAName='FORMDATA' classSUBMITBUTTONName='SUBMITBUTTON' classUSERName='USER' classPASSName='PHONE' data={this.enterDataToDirectory.bind(this)}/>\n         </div>\n      );\n   }\n\n   render() {\n      return (\n         <div>\n            {this.handlePage()}\n         </div>\n      );\n   }\n}\n\nclass Header extends Component{\n   render()\n   {\n      return(\n         <div className={this.props.className}>\n            PHONE DIRECTORY\n         </div>\n      );\n   }\n}\n\nclass SHOWALLINDIRECTORY extends Component{\n \n   render()\n   {\n      var de = this.props.del;\n      var i=-1;\n      var userdetail = this.props.data.map(function(contact) { \n         i++;\n         return(\n             <TROW num={i} name={contact.name} del={de} number={contact.number}  />\n         )\n     });\n       \n      return(\n\n         <div>\n            <table className={this.props.classTableName}>\n               <thead className={this.props.classTableHeadName}>\n                  <tr>\n                     <th>Name</th> \n                     <th>Number</th>\n                     <th>Delete</th>\n                  </tr>\n               </thead>\n               <tbody className={this.props.classTableBodyName} updateTable={this.props.updateTable}>\n                  {userdetail}\n               </tbody>\n            </table>\n         </div>\n      );\n   }\n}\n\nclass TAKEDATAINDIRECTORY extends Component{\n\n   constructor(props){\n      super(props);\n\n      this.state = {\n         name: '',\n         number:''\n      };\n\n      this.changeName = this.changeName.bind(this);\n      this.changeNumber = this.changeNumber.bind(this);\n      this.handleSubmit = this.handleSubmit.bind(this);\n   }\n\n   changeName(e)\n   {\n     this.setState({\n        name : e.target.value,\n     });\n   }\n   changeNumber(e)\n   {\n      this.setState({\n         number : e.target.value,\n      });\n   }\n   handleSubmit(e){\n       e.preventDefault();\n      var d = {\n         name: this.state.name, \n         number : this.state.number\n      };\n\n      this.props.data(d);\n   }\n   render()\n   {\n      return(\n         <div>\n           <form onSubmit={this.handleSubmit} className={this.props.classFORMSHOWName} >\n               <span className={this.props.classUSERName}>\n                  Username : <input placeholder=\"Username\" onChange={this.changeName} type=\"text\" />  \n               </span>\n               <br />\n               <span className={this.props.classPASSName}>\n                  Phone : <input placeholder=\"XXXXXXXXXX\" onChange={this.changeNumber} type=\"text\" /> <br />\n               </span>\n              <br /><br />\n              <span className={this.props.classFORMDATAName}>\n                 Enter data is: <br />\n                 Name: <span>{this.state.name}</span><br />\n                 Number: <span >{this.state.number}</span><br />\n              </span>\n              <button type='submit' className={this.props.classSUBMITBUTTONName} >Add Contact</button>\n           </form>\n         </div>\n      );\n   }\n}\n\nclass CHANGEPAGE extends Component{\n   render()\n   {\n      return(\n         <div>\n           <button className={this.props.className} onClick={() => this.props.page()}>{this.props.name}</button>\n         </div>\n      );\n   }\n}\n\nclass TROW extends Component{\n\n   constructor(props){\n      super(props);\n\n      this.deleteContact = this.deleteContact.bind(this);\n   }\n\n   deleteContact(e)\n   {\n      //console.log(e.target.value);\n      return this.props.del(e.target.value);\n   }\n   render()\n   { \n      return(\n         <tr>\n            <td>{this.props.name}</td>\n            <td>{this.props.number}</td>\n            <td><button value={this.props.num} onClick={this.deleteContact}>Delete</button></td>\n         </tr>\n      );\n   }\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\nserviceWorker.unregister();\n"],"sourceRoot":""}